/*
 * This file is generated by jOOQ.
*/
package com.jooqGenerated.tables.records;


import com.jooqGenerated.tables.Student;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentRecord extends UpdatableRecordImpl<StudentRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = -421207203;

    /**
     * Setter for <code>jooq.student.studentId</code>.
     */
    public void setStudentid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.student.studentId</code>.
     */
    public Integer getStudentid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooq.student.parentId</code>.
     */
    public void setParentid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.student.parentId</code>.
     */
    public Integer getParentid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>jooq.student.studentName</code>.
     */
    public void setStudentname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.student.studentName</code>.
     */
    public String getStudentname() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Student.STUDENT.STUDENTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Student.STUDENT.PARENTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Student.STUDENT.STUDENTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getStudentid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getParentid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getStudentname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentRecord value1(Integer value) {
        setStudentid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentRecord value2(Integer value) {
        setParentid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentRecord value3(String value) {
        setStudentname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentRecord
     */
    public StudentRecord() {
        super(Student.STUDENT);
    }

    /**
     * Create a detached, initialised StudentRecord
     */
    public StudentRecord(Integer studentid, Integer parentid, String studentname) {
        super(Student.STUDENT);

        set(0, studentid);
        set(1, parentid);
        set(2, studentname);
    }
}
