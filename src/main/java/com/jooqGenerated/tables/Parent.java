/*
 * This file is generated by jOOQ.
*/
package com.jooqGenerated.tables;


import com.jooqGenerated.Jooq;
import com.jooqGenerated.Keys;
import com.jooqGenerated.tables.records.ParentRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Parent extends TableImpl<ParentRecord> {

    private static final long serialVersionUID = -295599179;

    /**
     * The reference instance of <code>jooq.parent</code>
     */
    public static final Parent PARENT = new Parent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ParentRecord> getRecordType() {
        return ParentRecord.class;
    }

    /**
     * The column <code>jooq.parent.parentId</code>.
     */
    public final TableField<ParentRecord, Integer> PARENTID = createField("parentId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jooq.parent.studentId</code>.
     */
    public final TableField<ParentRecord, Integer> STUDENTID = createField("studentId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>jooq.parent</code> table reference
     */
    public Parent() {
        this("parent", null);
    }

    /**
     * Create an aliased <code>jooq.parent</code> table reference
     */
    public Parent(String alias) {
        this(alias, PARENT);
    }

    private Parent(String alias, Table<ParentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Parent(String alias, Table<ParentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jooq.JOOQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ParentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PARENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ParentRecord> getPrimaryKey() {
        return Keys.KEY_PARENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ParentRecord>> getKeys() {
        return Arrays.<UniqueKey<ParentRecord>>asList(Keys.KEY_PARENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ParentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ParentRecord, ?>>asList(Keys.PARENT_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Parent as(String alias) {
        return new Parent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Parent rename(String name) {
        return new Parent(name, null);
    }
}
